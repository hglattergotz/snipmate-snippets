/**
 *  $1 API method
 */
class ${1:APIMethodName} extends AbstractRestExposedFunction
{
  /**
   * Factory method for actions to create an instance.
   *
   * @param sfAction $action Instance of the action this gets called from
   */
  public static function getInstance(sfAction $action)
  {
    return new $1($action);
  }

  /**
   * Configure the API method
   *
   * Override default values and set method specific properties as well as
   * define API method paramters.
   */
  protected function configure()
  {
    $this->addParameters(array(
      new RestParameter(
        'id',
        RestParameter::PARAMETER_OPTIONAL,
        RestParameter::TYPE_NUMERIC,
        'The record id.')
    ));

    $this->description = $this->getAPIDesc();
    $this->route = '${2}';
    $this->method = self::METHOD_;
    $this->formats = array(self::FORMAT_JSON);
    $this->defaultOffset = 0;
    $this->defaultRowCount = 500;
    $this->hideDoc = false;
    $this->cacheEnabled = false;
    $this->cacheLifeTime = 60;
    $this->addExamples($this->getExamples());
  }

  /**
   * Main entry point of the class
   *
   * All work happens here and the return type MUST be an associative array.
   *
   * @return array An associative array (even if there is no result)
   */
  protected function doExecute()
  {
    // Code here
  }

  /**
   * Helper to return the API method description. Using this style of creating
   * a string is simpler to edit than having it inline in the code.
   *
   * @return string API method description
   */
  protected function getAPIDesc()
  {
    return <<<EOF
API Description
EOF;
  }

  protected function getExamples()
  {
    return array();
  }
}

